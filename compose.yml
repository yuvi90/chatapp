services:
  # Postgres Container
  db:
    image: postgres
    restart: always
    ports:
      - 5432:5432
    env_file:
      - ./.db.env
    container_name: chatapp_db
    networks:
      - chatapp
    volumes:
      - postgres_data:/var/lib/postgresql/data
  # Adminer Container
  adminer:
    depends_on:
      - db
    image: adminer
    restart: always
    ports:
      - 6500:8080
    container_name: chatapp_adminer
    networks:
      - chatapp
  # Express Container  
  backend:
    depends_on:
      - db
    build:
      context: './server'
      dockerfile: Dockerfile
    image: chatapp_backend
    restart: always
    ports:
      - 4000:4000
      - 9229:9229
    env_file:
      - ./server/.env
    container_name: chatapp_server
    networks:
      - chatapp
    develop:
      watch:
        - action: sync
          path: ./server
          target: /app
          ignore:
            - node_modules/
            - dist/
        - action: rebuild
          path: ./server/package.json
        - action: rebuild
          path: ./server/package-lock.json
  # React Container
  frontend:
    depends_on:
      - backend
    build:
      context: './client'
      dockerfile: Dockerfile
    image: frontend
    restart: always
    ports:
      - 5173:5173
    env_file:
      - ./client/.env
    container_name: chatapp_client
    networks:
      - chatapp
    develop:
      watch:
        - action: sync
          path: ./client
          target: /app
          ignore:
            - node_modules/
            - dist/
        - action: rebuild
          path: ./client/package.json
        - action: rebuild
          path: ./client/package-lock.json
networks:
  chatapp:
volumes:
  postgres_data: